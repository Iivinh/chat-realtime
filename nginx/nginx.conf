# Cấu hình worker processes
user nginx;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # ✅ ĐỊNH NGHĨA UPSTREAM VỚI IP_HASH (Sticky Session cho Socket.IO)
    upstream backend_servers {
        # ✅ ip_hash đảm bảo cùng 1 client luôn kết nối đến cùng 1 backend instance
        # Điều này cực kỳ quan trọng cho Socket.IO khi có nhiều replicas
        ip_hash;
        
        server backend:5000 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        
        # ✅ Tăng timeout cho WebSocket connections
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        location / {
            # Headers cơ bản
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;

            # ✅ Load balancing với sticky session
            proxy_pass http://backend_servers;
            proxy_next_upstream error timeout http_500 http_503 http_404;
            # ✅ CẤU HÌNH QUAN TRỌNG CHO SOCKET.IO / WEBSOCKET
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            
            proxy_read_timeout 86400s;  # 24 giờ
            proxy_send_timeout 86400s;
            proxy_connect_timeout 86400s;

            # add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
            # add_header 'Access-Control-Allow-Credentials' 'true';
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            # ✅ Tắt buffering cho realtime communication
            proxy_buffering off;
            
            # ✅ Giữ connection alive
            proxy_cache_bypass $http_upgrade;
        }
    }
}