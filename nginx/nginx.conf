# Cấu hình worker processes
user nginx;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # ✅ LOGGING CHI TIẾT HƠN ĐỂ DEBUG
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'upstream: $upstream_addr '
                       'upstream_status: $upstream_status';
    
    access_log /var/log/nginx/access.log detailed;

    # ✅ ĐỊNH NGHĨA UPSTREAM CHO DOCKER SWARM
    upstream backend_servers {
        # ⚠️ SWARM: Sử dụng 'tasks' prefix để access tất cả replicas
        # Docker Swarm tự động resolve 'tasks.SERVICE_NAME' thành IPs của tất cả tasks
        
        # Option 1: Let Swarm handle load balancing (RECOMMENDED)
        server backend:5000 max_fails=3 fail_timeout=30s;
        
        # Option 2: Direct to tasks (nếu muốn Nginx handle LB)
        # server tasks.backend:5000 max_fails=3 fail_timeout=30s;
        
        # ✅ Sticky session based on Socket.IO session ID
        # Không dùng ip_hash vì trong Swarm overlay network, 
        # tất cả requests có cùng source IP
        hash $cookie_io consistent;
        
        # Keepalive connections
        keepalive 32;
    }

    server {
        listen 80;
        
        # ✅ Tăng timeout cho WebSocket connections
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        location / {
            # Headers cơ bản
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;

            # ✅ Load balancing với sticky session
            proxy_pass http://backend_servers;
            
            # ✅ Retry logic
            proxy_next_upstream error timeout http_500 http_503;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
            
            # ✅ CẤU HÌNH QUAN TRỌNG CHO SOCKET.IO / WEBSOCKET
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            
            proxy_read_timeout 86400s;  # 24 giờ
            proxy_send_timeout 86400s;
            proxy_connect_timeout 86400s;

            # ✅ Tắt buffering cho realtime communication
            proxy_buffering off;
            
            # ✅ Giữ connection alive
            proxy_cache_bypass $http_upgrade;
            
            # ✅ Headers để track upstream
            add_header X-Upstream-Addr $upstream_addr always;
        }
        
        # ✅ Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}