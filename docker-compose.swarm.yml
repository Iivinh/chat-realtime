version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    networks:
      - chat_network
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user_rabbitmq
      RABBITMQ_DEFAULT_PASS: password_rabbitmq_i7fK5ZEBUyr381F8
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  redis:
    image: redis:alpine
    networks:
      - chat_network
    ports:
      - "6379:6379"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  database:
    image: mongo:5.0
    networks:
      - chat_network
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: chatuser
      MONGO_INITDB_ROOT_PASSWORD: chatpassword
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints:
          - node.role == manager

  backend:
    image: chat-backend:latest
    networks:
      - chat_network
    environment:
      MONGO_URI: "mongodb://chatuser:chatpassword@database:27017/chat_db?authSource=admin"
      PORT: 5000
      RABBITMQ_URL: "amqp://rabbitmq:5672"
      REDIS_URL: "redis://redis:6379"
    depends_on:
      - database
      - rabbitmq
      - redis
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  nginx:
    image: nginx:latest
    networks:
      - chat_network
    ports:
      - "5000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  frontend:
    image: chat-frontend:latest
    networks:
      - chat_network
    ports:
      - "3000:80"  # ✅ QUAN TRỌNG: 80 vì Nginx trong container
    depends_on:
      - nginx
    environment:
      VITE_API_URL: http://localhost:5000
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s

networks:
  chat_network:
    driver: overlay
    attachable: true

volumes:
  mongo_data: