services:
  # ✅ THÊM REDIS CHO SOCKET.IO ADAPTER (Đồng bộ giữa các backend replicas)
  redis:
    image: redis:7-alpine
    container_name: chat_redis
    ports:
      - "6379:6379"
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  database:
    image: mongo:latest
    container_name: chat_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: chatuser
      MONGO_INITDB_ROOT_PASSWORD: chatpassword
    restart: always

  backend:
    build: ./backend
    command: npm start
    environment:
      MONGO_URI: "mongodb://chatuser:chatpassword@database:27017/chat_db?authSource=admin"
      PORT: 5000
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      # ✅ Thêm Redis config
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - database
      - redis  # ✅ Backend phụ thuộc vào Redis
    restart: always
    deploy:
      replicas: 2  # Giữ nguyên 2 replicas

  nginx:
    image: nginx:latest
    container_name: chat_nginx
    ports:
      - "5000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    restart: always

  front:
    build: ./frontend
    container_name: chat_frontend
    ports:
      - "3000:3000"
    depends_on:
      - nginx
    environment:
      VITE_API_URL: http://localhost:5000
    restart: always

volumes:
  mongo_data:
  redis_data:  # ✅ Volume cho Redis persistence